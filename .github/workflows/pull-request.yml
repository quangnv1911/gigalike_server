name: 🔍 Pull Request Checks

on:
  pull_request:
    branches: [main, staging]

jobs:
  lint-and-format:
    name: 🎨 Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 🎨 Check Code Formatting
        run: |
          mvn spotless:check
          
      - name: 📝 Checkstyle Analysis
        run: |
          mvn checkstyle:check

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'

      - name: 🔒 Run Snyk Security Check
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  build-check:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [
          api-gateway,
          auth-service,
          config-server,
          eureka-server,
          marketing-service,
          order-service,
          payment-service,
          platform-service,
          product-service
        ]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 🏗️ Build All Services (utility-shared + services)
        run: |
          chmod +x ./scripts/build-all.sh
          ./scripts/build-all.sh

      - name: 🐳 Build Docker Image
        working-directory: ./${{ matrix.service }}
        run: docker build -t ${{ matrix.service }}:pr-${{ github.event.number }} .

  performance-test:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    if: github.base_ref == 'main'
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🚀 Start Application
        run: |
          docker-compose -f docker-compose.perf.yml up -d
          sleep 60

  comment-pr:
    name: 💬 Comment on PR
    runs-on: ubuntu-latest
    needs: [lint-and-format, security-scan, build-check]
    if: always()
    
    steps:
      - name: 💬 Comment PR Results
        uses: actions/github-script@v6
        with:
          script: |
            const results = {
              'lint-and-format': '${{ needs.lint-and-format.result }}',
              'integration-tests': '${{ needs.integration-tests.result }}',
              'security-scan': '${{ needs.security-scan.result }}',
              'build-check': '${{ needs.build-check.result }}'
            };
            
            let status = '✅ All checks passed!';
            let hasFailures = false;
            
            for (const [job, result] of Object.entries(results)) {
              if (result === 'failure') {
                hasFailures = true;
                break;
              }
            }
            
            if (hasFailures) {
              status = '❌ Some checks failed. Please review the results above.';
            }
            
            const body = `
            ## 🔍 Pull Request Check Results
            
            | Check | Status |
            |-------|--------|
            | 🎨 Code Quality | ${{ needs.lint-and-format.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | 🔗 Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | 🔒 Security Scan | ${{ needs.security-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | 🏗️ Build Check | ${{ needs.build-check.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            
            ${status}
            
            ---
            🤖 *Automated check by GitHub Actions*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
